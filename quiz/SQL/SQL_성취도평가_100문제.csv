번호,분류,질문,선택지1,선택지2,선택지3,선택지4,정답,해설
1,Database 개념,데이터베이스(Database)에 대한 설명으로 가장 적절한 것은?,① 개인적으로 사용할 목적으로 분산되어 관리되는 데이터의 집합,② 공유되어 사용될 목적으로 통합되어 관리되는 데이터의 집합,③ 임시로 저장되는 캐시 데이터의 집합,④ 백업을 위한 데이터의 복사본,②,데이터베이스는 '공유'되어 사용될 목적으로 통합되어 관리되는 '데이터의 집합'입니다.
2,Database 개념,DBMS(Database Management System)의 역할로 적절하지 않은 것은?,① 데이터베이스를 운영하고 관리하는 소프트웨어,② 여러 명의 사용자가 데이터베이스에 동시에 접근 가능하도록 지원,③ 데이터의 백업과 복구 기능 제공,④ 애플리케이션의 사용자 인터페이스 디자인 제공,④,"DBMS는 데이터베이스 관리를 담당하며, 애플리케이션의 UI 디자인은 DBMS의 역할이 아닙니다."
3,Database 개념,관계형 DBMS(RDBMS)의 특징으로 옳지 않은 것은?,① 하나 이상의 테이블로 구성,② 테이블 간에 서로 연결된 데이터를 가짐,③ SQL로 제어 가능,④ 계층형 구조로만 데이터를 저장,④,"RDBMS는 테이블 형태의 관계형 구조로 데이터를 저장하며, 계층형 구조는 다른 데이터베이스 모델입니다."
4,SQL 언어,SQL(Structured Query Language)에 대한 설명으로 틀린 것은?,① 데이터베이스에 접근하고 조작하기 위한 표준 언어,② 국제표준화기구에서 SQL 표준을 정하여 발표,③ 모든 DBMS에서 동일한 SQL 문법만 사용,"④ 데이터를 정의하고, 조작하고, 제어하는 기능 포함",③,각 DBMS별로 표준 SQL에서 약간의 기능적 특성을 반영하여 사용합니다.
5,SQL 언어,다음 중 DML(Data Manipulation Language)에 해당하는 명령어가 아닌 것은?,① SELECT,② INSERT,③ UPDATE,④ CREATE,④,"CREATE는 DDL(Data Definition Language)에 해당하며, DML은 SELECT, INSERT, UPDATE, DELETE 등입니다."
6,SQL 언어,DDL(Data Definition Language)에 해당하는 명령어는?,① SELECT,② INSERT,③ COMMIT,④ DROP,④,"DDL은 데이터 정의어로 CREATE, ALTER, DROP, TRUNCATE, RENAME 등이 있습니다."
7,테이블 구조,테이블의 구성요소가 아닌 것은?,① 컬럼(Column),② 행(Row),③ 데이터 타입,④ 프로시저(Procedure),④,"테이블은 컬럼(열), 행(로우), 데이터 타입, 컬럼 속성 등으로 구성되며, 프로시저는 별도의 데이터베이스 객체입니다."
8,데이터 타입,NUMBER 데이터 타입에 대한 설명으로 옳은 것은?,① 최대 2000 byte의 고정 길이 문자 저장,② 0을 포함한 음수와 양수 등의 숫자를 저장,③ BC 4712년부터 AD 9999년까지의 날짜를 저장,④ TRUE/FALSE 값만 저장,②,NUMBER는 0을 포함한 음수와 양수 등의 숫자를 저장하는 데이터 타입입니다.
9,데이터 타입,CHAR와 VARCHAR2의 차이점으로 옳은 것은?,"① CHAR는 가변 길이, VARCHAR2는 고정 길이","② CHAR는 고정 길이, VARCHAR2는 가변 길이","③ CHAR는 숫자만, VARCHAR2는 문자만 저장",④ 두 타입은 완전히 동일함,②,"CHAR는 고정 길이 문자(최대 2000byte), VARCHAR2는 가변 길이 문자(최대 4000byte)를 저장합니다."
10,데이터 타입,DATE 데이터 타입에 대한 설명으로 옳은 것은?,① 최대 4000 byte의 가변 길이 문자 저장,② BC 4712년부터 AD 9999년까지의 날짜를 7byte로 저장,③ 날짜와 시간을 문자열로만 저장,④ 밀리초 단위까지 저장 가능,②,DATE 타입은 BC 4712년부터 AD 9999년까지의 날짜를 7byte로 저장합니다.
11,SELECT 기본,다음 중 TB_TST_CST001M 테이블에서 모든 컬럼을 조회하는 SQL 문법으로 옳은 것은?,① GET * FROM TB_TST_CST001M;,② SELECT ALL FROM TB_TST_CST001M;,③ SELECT * FROM TB_TST_CST001M;,④ QUERY * FROM TB_TST_CST001M;,③,SELECT * FROM 테이블명; 형태로 모든 컬럼을 조회합니다.
12,WHERE 조건절,WHERE 절의 역할로 옳은 것은?,① 데이터를 정렬하는 명령어,② 조건에 해당하는 데이터만 검색하는 명령어,③ 테이블을 생성하는 명령어,④ 컬럼에 별칭을 부여하는 명령어,②,WHERE 절은 조건에 해당하는 데이터만 검색하기 위해 사용합니다.
13,ORDER BY,ORDER BY의 기본 정렬 순서(생략 시)는?,① 내림차순(DESC),② 오름차순(ASC),③ 무작위 정렬,④ 입력 순서,②,ORDER BY의 기본값(default)은 오름차순(ASC)입니다.
14,ORDER BY,다음 SQL의 결과로 옳은 것은? SELECT * FROM TB_TST_CST001M ORDER BY BIRTH_DATE DESC;,① 생년월일이 가장 빠른 사람부터 정렬,② 생년월일이 가장 느린 사람부터 정렬,③ 이름순으로 정렬,④ 고객ID 순으로 정렬,②,DESC는 내림차순이므로 생년월일이 가장 느린(최근) 사람부터 정렬됩니다.
15,AS 별칭,AS 키워드의 용도는?,① 테이블을 삭제,② 컬럼이나 테이블에 별칭을 부여,③ 데이터를 정렬,④ 중복 제거,②,AS는 컬럼이나 테이블에 별칭(Alias)을 부여하는 명령어입니다.
16,DISTINCT,DISTINCT 키워드의 역할은?,① 데이터를 정렬,② 중복된 데이터를 제거하고 한 개만 조회,③ 모든 데이터를 조회,④ NULL 값만 조회,②,DISTINCT는 중복된 데이터는 한 개만 가져오는 명령어입니다.
17,집계함수,COUNT(*) 함수의 역할은?,① 데이터의 합계를 구함,② 데이터의 개수를 구함,③ 데이터의 평균을 구함,④ 데이터의 최댓값을 구함,②,COUNT는 조건에 맞는 데이터의 수량을 구하는 함수입니다.
18,집계함수,SUM 함수에 대한 설명으로 옳은 것은?,① 데이터의 개수를 반환,② 데이터의 합계를 반환,③ 데이터의 평균을 반환,④ 데이터의 최솟값을 반환,②,SUM 함수는 조건에 맞는 데이터의 합을 구하는 함수입니다.
19,집계함수,AVG 함수의 역할은?,① 최댓값 반환,② 최솟값 반환,③ 평균값 반환,④ 합계 반환,③,AVG 함수는 조건에 맞는 데이터의 평균을 구하는 함수입니다.
20,집계함수,MAX와 MIN 함수에 대한 설명으로 옳은 것은?,"① MAX는 최솟값, MIN은 최댓값을 반환","② MAX는 최댓값, MIN은 최솟값을 반환",③ 두 함수 모두 평균값을 반환,④ 두 함수 모두 합계를 반환,②,"MAX는 최댓값, MIN은 최솟값을 구하는 함수입니다."
21,비교연산자,다음 중 '같지 않음'을 나타내는 연산자가 아닌 것은?,① <>,② !=,③ ==,④ 위 모두 '같지 않음'을 나타냄,③,"SQL에서 '같지 않음'은 <> 또는 != 로 표현하며, ==는 사용하지 않습니다."
22,비교연산자,SELECT * FROM TB_TST_ACT001M WHERE BALANCE >= 5000000; 의 의미는?,① 잔액이 500만원 미만인 계좌 조회,② 잔액이 500만원 이하인 계좌 조회,③ 잔액이 500만원 이상인 계좌 조회,④ 잔액이 정확히 500만원인 계좌만 조회,③,>= 연산자는 '크거나 같음(이상)'을 의미합니다.
23,BETWEEN,BETWEEN A AND B의 의미는?,① A 이상 B 미만,② A 초과 B 이하,③ A 이상 B 이하,④ A 초과 B 미만,③,BETWEEN A AND B는 A 이상 B 이하의 범위를 나타냅니다.
24,IN 연산자,"WHERE CUSTOMER_ID IN (1, 5, 10); 의 의미는?","① CUSTOMER_ID가 1, 5, 10 중 하나인 데이터 조회",② CUSTOMER_ID가 1부터 10까지인 데이터 조회,"③ CUSTOMER_ID가 1, 5, 10이 아닌 데이터 조회",④ CUSTOMER_ID가 10보다 큰 데이터 조회,①,IN 연산자는 여러 값 중 하나와 일치하면 참을 반환합니다.
25,NOT IN 연산자,NOT IN 연산자의 의미는?,① 지정된 값 중 하나와 일치,② 지정된 값 모두와 일치하지 않음,③ NULL 값만 조회,④ 모든 값을 조회,②,NOT IN은 여러 값 모두와 일치하지 않으면 참을 반환합니다.
26,LIKE 연산자,WHERE NAME LIKE '김%'; 의 의미는?,① 이름이 '김'으로 끝나는 데이터,② 이름이 '김'으로 시작하는 데이터,③ 이름에 '김'이 포함된 데이터,④ 이름이 정확히 '김'인 데이터,②,"'%'는 임의의 문자열을 의미하며, '김%'는 '김'으로 시작하는 것을 의미합니다."
27,LIKE 연산자,WHERE NAME LIKE '%김%'; 의 의미는?,① 이름이 '김'으로 시작,② 이름이 '김'으로 끝남,③ 이름에 '김'이 포함,④ 이름이 정확히 '김김',③,'%김%'는 앞뒤에 임의의 문자열이 있고 중간에 '김'이 포함된 것을 의미합니다.
28,LIKE 연산자,WHERE NAME LIKE '%수'; 의 의미는?,① 이름이 '수'로 시작,② 이름이 '수'로 끝남,③ 이름에 '수'가 포함,④ 이름이 정확히 '수',②,"'%수'는 임의의 문자열 뒤에 '수'가 오는 것, 즉 '수'로 끝나는 것을 의미합니다."
29,NULL,NULL에 대한 설명으로 옳지 않은 것은?,① 값이 존재하지 않음을 의미,② NULL과 연산을 한 결과는 NULL,③ '=' 연산자로 비교 가능,④ IS NULL 또는 IS NOT NULL로 비교,③,"NULL은 '=' 연산자로 비교할 수 없으며, IS NULL 또는 IS NOT NULL을 사용해야 합니다."
30,NULL,WHERE EMAIL IS NULL; 의 의미는?,① 이메일이 빈 문자열인 데이터,② 이메일이 NULL인 데이터,③ 이메일이 존재하는 데이터,④ 모든 이메일 데이터,②,IS NULL은 해당 컬럼의 값이 NULL인 경우를 조회합니다.
31,NULL,WHERE EMAIL IS NOT NULL; 의 의미는?,① 이메일이 NULL인 데이터,② 이메일이 NULL이 아닌 데이터,③ 이메일이 빈 문자열인 데이터,④ 모든 데이터,②,IS NOT NULL은 해당 컬럼의 값이 NULL이 아닌 경우를 조회합니다.
32,NULL,집계함수가 NULL 값을 처리하는 방법으로 옳은 것은?,① NULL 값을 0으로 계산,② NULL 값을 제외하고 계산,③ NULL 값만 계산,④ NULL 값을 빈 문자열로 변환하여 계산,②,"집계함수(COUNT, SUM, AVG 등)는 NULL 값을 제외하고 처리합니다."
33,논리연산자,AND 연산자의 특징은?,① 하나라도 참이면 참,② 모든 조건이 참이어야 참,③ 조건이 거짓이면 참,④ 항상 참을 반환,②,AND 연산자는 모든 조건이 참(TRUE)이어야 결과가 참입니다.
34,논리연산자,OR 연산자의 특징은?,① 모든 조건이 참이어야 참,② 하나라도 조건이 참이면 참,③ 모든 조건이 거짓이어야 참,④ 항상 거짓을 반환,②,OR 연산자는 하나라도 조건이 참(TRUE)이면 결과가 참입니다.
35,논리연산자,NOT 연산자의 역할은?,① 조건을 그대로 반환,② 조건의 결과를 반대로 변환,③ 조건을 삭제,④ 조건을 추가,②,NOT 연산자는 조건이 거짓(FALSE)이면 참을 반환하여 결과를 반대로 만듭니다.
36,논리연산자,논리 연산자의 우선순위가 높은 순서대로 나열된 것은?,① AND > OR > NOT,② OR > AND > NOT,③ NOT > AND > OR,④ NOT > OR > AND,③,논리 연산자의 우선순위는 NOT > AND > OR 입니다.
37,SQL 복합 조건,WHERE CUSTOMER_ID >= 10 AND EMAIL LIKE '%example.com'; 의 의미는?,① CUSTOMER_ID가 10 이상이거나 이메일이 example.com으로 끝나는 데이터,② CUSTOMER_ID가 10 이상이고 이메일이 example.com으로 끝나는 데이터,③ CUSTOMER_ID가 10보다 작고 이메일이 example.com인 데이터,④ 모든 데이터,②,AND 연산자는 두 조건을 모두 만족하는 데이터를 조회합니다.
38,테이블 명명규칙,테이블 타입 'M'이 의미하는 것은?,① 이력(History),② 기본(Master),③ 관계(Relationship),④ 집계(Summary),②,M은 Master로 현재나 최종의 상태를 표시하는 기본 테이블 타입입니다.
39,테이블 명명규칙,테이블 타입 'L'이 의미하는 것은?,① 로그(loG),② 내역(List),③ 인터페이스(interFace),④ 기본(Master),②,L은 List로 동일 형식의 정보가 낱개 형태로 관리되는 내역 테이블입니다.
40,테이블 명명규칙,테이블 타입 'H'가 의미하는 것은?,① 기본(Master),② 이력(History),③ 코드(Code),④ 백업(Backup),②,H는 History로 기본 타입이 존재하며 과거 정보를 시점별로 보관하는 이력 테이블입니다.
41,데이터 타입,TIMESTAMP와 DATE의 차이점은?,① TIMESTAMP는 DATE의 축소 버전,② TIMESTAMP는 DATE의 확장된 타입,③ 두 타입은 완전히 동일,"④ TIMESTAMP는 문자형, DATE는 숫자형",②,TIMESTAMP는 DATE 타입의 확장된 타입으로 더 정밀한 시간 정보를 저장할 수 있습니다.
42,VARCHAR2,VARCHAR2(100)의 의미는?,① 정확히 100byte의 문자를 저장,② 최대 100byte의 가변 길이 문자를 저장,③ 100개의 문자만 저장 가능,④ 100개의 숫자만 저장 가능,②,VARCHAR2(100)은 최대 100byte까지 가변 길이 문자를 저장할 수 있습니다.
43,CHAR,CHAR 데이터 타입의 특징은?,① 가변 길이 문자 저장,"② 고정 길이 문자 저장, 부족한 부분은 공백으로 채움",③ 숫자만 저장 가능,④ NULL 값 저장 불가,②,"CHAR는 고정 길이 문자를 저장하며, 처음 정한 크기보다 적은 문자열을 입력하면 공백으로 채웁니다."
44,컬럼 속성,PRIMARY KEY 제약조건의 특징은?,"① 중복 허용, NULL 허용","② 중복 불가, NULL 불가","③ 중복 허용, NULL 불가","④ 중복 불가, NULL 허용",②,PRIMARY KEY는 테이블의 각 행을 고유하게 식별하므로 중복과 NULL을 모두 허용하지 않습니다.
45,컬럼 속성,UNIQUE 제약조건의 특징은?,"① 중복 허용, NULL 허용","② 중복 불가, NULL 허용","③ 중복 허용, NULL 불가","④ 중복 불가, NULL 불가",②,"UNIQUE는 중복된 값을 허용하지 않지만, NULL 값은 허용합니다."
46,SQL 함수,단일행 함수(Single-row function)의 특징은?,① 여러 개의 입력 → 한 개의 출력,② 한 개의 입력 → 한 개의 출력,③ 한 개의 입력 → 여러 개의 출력,④ 여러 개의 입력 → 여러 개의 출력,②,단일행 함수는 한 개의 입력 값에 대해 한 개의 출력 값을 반환합니다.
47,SQL 함수,다중행 함수(Multiple-row function)의 특징은?,① 한 개의 입력 → 한 개의 출력,② 여러 개의 입력 → 한 개의 출력,③ 한 개의 입력 → 여러 개의 출력,④ 여러 개의 입력 → 여러 개의 출력,②,다중행 함수는 여러 개의 입력 값에 대해 한 개의 출력 값을 반환합니다.
48,단일행 함수,다음 중 단일행 함수의 종류가 아닌 것은?,"① 문자형 함수 (lower, upper, substr 등)","② 숫자형 함수 (round, trunc, ceil 등)","③ 날짜형 함수 (sysdate, extract 등)","④ 집계 함수 (count, sum, avg 등)",④,"집계 함수는 다중행 함수에 속하며, 단일행 함수가 아닙니다."
49,GROUP BY,GROUP BY 절의 역할은?,① 데이터를 정렬,② 데이터를 그룹별로 묶음,③ 데이터를 삭제,④ 데이터를 수정,②,GROUP BY는 데이터를 그룹별로 묶을 수 있게 해주는 절입니다.
50,GROUP BY,"SELECT CUSTOMER_ID, COUNT(*) FROM TB_TST_ACT001M GROUP BY CUSTOMER_ID; 의 의미는?",① 모든 고객의 총 계좌 개수,② 고객별 보유 계좌 개수,③ 계좌별 고객 수,④ 고객 ID만 조회,②,GROUP BY CUSTOMER_ID는 고객별로 그룹화하여 각 고객의 계좌 개수를 계산합니다.
51,HAVING,HAVING 절의 역할은?,① GROUP BY 실행 전에 조건 필터링,② GROUP BY 실행 후에 그룹 조건 필터링,③ 데이터를 정렬,④ 테이블을 생성,②,"HAVING은 GROUP BY 절 뒤에 사용하는 조건절로, 그룹화된 결과에 대한 조건을 지정합니다."
52,WHERE vs HAVING,WHERE와 HAVING의 차이점으로 옳은 것은?,"① WHERE는 그룹 필터링, HAVING은 개별 행 필터링","② WHERE는 개별 행 필터링, HAVING은 그룹 필터링",③ 두 절은 완전히 동일,④ WHERE만 조건 지정 가능,②,"WHERE는 GROUP BY 전 개별 행을 필터링하고, HAVING은 GROUP BY 후 그룹을 필터링합니다."
53,HAVING,"다음 SQL에서 HAVING의 역할은? SELECT CUSTOMER_ID, COUNT(*) AS CNT FROM TB_TST_ACT001M GROUP BY CUSTOMER_ID HAVING COUNT(*) >= 3;",① 모든 계좌를 조회,② 계좌가 3개 이상인 고객만 조회,③ 계좌가 3개 미만인 고객만 조회,④ 고객 ID가 3 이상인 고객만 조회,②,HAVING COUNT(*) >= 3 은 그룹화된 결과 중 개수가 3개 이상인 그룹만 필터링합니다.
54,SQL 실행 순서,SQL의 실행 순서로 옳은 것은?,① SELECT → FROM → WHERE → GROUP BY → HAVING → ORDER BY,② FROM → WHERE → GROUP BY → HAVING → SELECT → ORDER BY,③ FROM → SELECT → WHERE → GROUP BY → HAVING → ORDER BY,④ WHERE → FROM → GROUP BY → SELECT → HAVING → ORDER BY,②,SQL 실행 순서는 FROM → WHERE → GROUP BY → HAVING → SELECT → ORDER BY 입니다.
55,SQL 실행 순서,WHERE 절과 HAVING 절의 실행 시점 차이는?,"① WHERE는 GROUP BY 후, HAVING은 GROUP BY 전","② WHERE는 GROUP BY 전, HAVING은 GROUP BY 후",③ 두 절 모두 GROUP BY 전,④ 두 절 모두 GROUP BY 후,②,"WHERE는 GROUP BY 실행 이전에, HAVING은 GROUP BY 실행 이후에 수행됩니다."
56,집합연산자,UNION과 UNION ALL의 차이점은?,"① UNION은 중복 포함, UNION ALL은 중복 제거","② UNION은 중복 제거, UNION ALL은 중복 포함",③ 두 연산자는 완전히 동일,"④ UNION은 교집합, UNION ALL은 차집합",②,"UNION은 중복을 제거한 합집합, UNION ALL은 중복을 포함한 합집합입니다."
57,집합연산자,INTERSECT 연산자의 역할은?,① 합집합,② 교집합,③ 차집합,④ 곱집합,②,"INTERSECT는 두 집합의 교집합, 즉 공통으로 존재하는 데이터를 반환합니다."
58,집합연산자,MINUS(또는 EXCEPT) 연산자의 역할은?,① 합집합,② 교집합,③ 차집합,④ 중복 제거,③,MINUS(Oracle) 또는 EXCEPT는 첫 번째 집합에서 두 번째 집합을 뺀 차집합을 반환합니다.
59,집합연산자,집합 연산자 사용 시 주의할 점은?,① 합치려는 두 데이터 그룹 간에 컬럼의 수와 데이터 형식이 일치해야 함,② 컬럼 수가 다르면 자동으로 NULL로 채워짐,③ 데이터 형식이 달라도 상관없음,④ 제약 없이 자유롭게 사용 가능,①,집합 연산자 사용 시 합치려는 두 데이터 그룹 간에 컬럼의 수와 데이터의 형식이 일치해야 합니다.
60,윈도우 함수,ROW_NUMBER() 함수의 특징은?,"① 같은 값에 같은 순위 부여, 다음 순위 건너뜀","② 같은 값에 같은 순위 부여, 다음 순위 건너뛰지 않음",③ 고유한 순위를 부여 (같은 값이라도 다른 순위),④ 순위 부여 불가,③,ROW_NUMBER()는 같은 값이라도 각 행에 고유한 순위를 부여합니다.
61,윈도우 함수,RANK() 함수의 특징은?,① 고유한 순위 부여,"② 같은 값에 같은 순위 부여, 다음 순위 건너뜀","③ 같은 값에 같은 순위 부여, 다음 순위 건너뛰지 않음",④ 순위를 역순으로 부여,②,"RANK()는 같은 값에 같은 순위를 부여하며, 다음 순위는 건너뜁니다. (예: 1, 1, 3, 4...)"
62,윈도우 함수,DENSE_RANK() 함수의 특징은?,① 고유한 순위 부여,"② 같은 값에 같은 순위 부여, 다음 순위 건너뜀","③ 같은 값에 같은 순위 부여, 다음 순위 건너뛰지 않음",④ 항상 1부터 시작,③,"DENSE_RANK()는 같은 값에 같은 순위를 부여하며, 다음 순위를 건너뛰지 않습니다. (예: 1, 1, 2, 3...)"
63,윈도우 함수,PARTITION BY의 역할은?,① 데이터를 삭제,② 그룹을 나누는 기준 설정,③ 테이블을 생성,④ 데이터를 정렬,②,PARTITION BY는 윈도우 함수에서 그룹을 나눌 기준을 설정합니다.
64,WITH 절,WITH 절의 용도는?,① 임시 결과 집합을 정의하여 쿼리를 간결하게 작성,② 테이블을 영구적으로 생성,③ 데이터를 삭제,④ 인덱스를 생성,①,WITH 절은 임시 결과 집합(CTE)을 정의하여 복잡한 쿼리를 더 읽기 쉽게 작성할 수 있습니다.
65,성능,WHERE 절과 HAVING 절 중 성능이 더 좋은 것은?,① HAVING이 항상 더 빠름,② WHERE가 더 빠름 (불필요한 데이터를 미리 제거),③ 두 절의 성능은 동일,"④ 상황에 따라 달라지지만, 일반적으로 HAVING이 더 빠름",②,WHERE 절이 GROUP BY 전에 불필요한 데이터를 미리 제거하므로 일반적으로 더 빠릅니다.
66,DML,DML(Data Manipulation Language)에 해당하지 않는 것은?,① SELECT,② INSERT,③ UPDATE,④ CREATE,④,"CREATE는 DDL이며, DML은 SELECT, INSERT, UPDATE, DELETE, MERGE 등입니다."
67,INSERT,INSERT 문의 기본 형태로 옳은 것은?,① INSERT (컬럼명) INTO 테이블명 VALUES (데이터),② INSERT INTO 테이블명 (컬럼명) VALUES (데이터),③ INSERT 테이블명 SET 컬럼명 = 데이터,④ INSERT VALUES (데이터) INTO 테이블명,②,INSERT INTO 테이블명 (컬럼명) VALUES (데이터) 형태가 올바른 문법입니다.
68,INSERT,INSERT 문에서 컬럼명을 명시하지 않으면?,① 에러 발생,② VALUES 절의 데이터가 순서대로 삽입됨,③ NULL 값만 삽입됨,④ 첫 번째 컬럼에만 삽입됨,②,테이블명 뒤에 컬럼명을 명시하지 않으면 VALUES 절의 데이터가 테이블 컬럼 순서대로 삽입됩니다.
69,UPDATE,UPDATE 문의 기본 형태로 옳은 것은?,① UPDATE 테이블명 WHERE 조건 SET 컬럼명 = 값,② UPDATE 테이블명 SET 컬럼명 = 값 WHERE 조건,③ SET 컬럼명 = 값 UPDATE 테이블명 WHERE 조건,④ UPDATE SET 컬럼명 = 값 FROM 테이블명 WHERE 조건,②,UPDATE 테이블명 SET 컬럼명 = 값 WHERE 조건 형태가 올바른 문법입니다.
70,UPDATE,UPDATE 문에서 WHERE 절을 생략하면?,① 에러 발생,② 해당 테이블의 모든 데이터가 수정됨,③ 첫 번째 행만 수정됨,④ 아무 것도 수정되지 않음,②,WHERE 절을 명시하지 않으면 해당 테이블(컬럼)의 모든 데이터가 수정되므로 주의해야 합니다.
71,DELETE,DELETE 문의 기본 형태로 옳은 것은?,① DELETE 테이블명 WHERE 조건,② DELETE FROM 테이블명 WHERE 조건,③ DELETE WHERE 조건 FROM 테이블명,④ REMOVE FROM 테이블명 WHERE 조건,②,DELETE FROM 테이블명 WHERE 조건 형태가 올바른 문법입니다.
72,DELETE,DELETE 문에서 WHERE 절을 생략하면?,① 에러 발생,② 해당 테이블의 모든 데이터가 삭제됨,③ 첫 번째 행만 삭제됨,④ 아무 것도 삭제되지 않음,②,WHERE 절을 생략하면 테이블의 모든 데이터가 삭제되므로 주의해야 합니다.
73,COMMIT,COMMIT의 역할은?,① 작업한 내역을 취소하고 이전 상태로 되돌림,② 작업한 내역을 확정지어 디스크에 저장,③ 테이블을 삭제,④ 데이터를 조회,②,COMMIT은 작업한 내역을 확정지어 디스크에 저장하는 명령어입니다.
