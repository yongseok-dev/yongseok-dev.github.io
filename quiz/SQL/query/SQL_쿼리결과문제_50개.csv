번호,분류,테이블,쿼리,질문,선택지1,선택지2,선택지3,선택지4,정답,결과,해설
1,SELECT 기본,TB_EMPLOYEE,"SELECT NAME, SALARY
FROM TB_EMPLOYEE
WHERE DEPT = '개발';",위 쿼리의 실행 결과로 조회되는 행의 개수는?,① 1개,② 2개,③ 3개,④ 4개,②,"이영희, 4000000
최지영, 4500000",DEPT가 '개발'인 직원은 이영희와 최지영 2명입니다.
2,SELECT 기본,TB_PRODUCT,"SELECT COUNT(*)
FROM TB_PRODUCT
WHERE CATEGORY = '전자';",위 쿼리의 실행 결과는?,① 3,② 4,③ 5,④ 6,②,4,"CATEGORY가 '전자'인 제품은 노트북, 마우스, 키보드, 모니터 4개입니다."
3,집계함수,TB_EMPLOYEE,"SELECT MAX(SALARY)
FROM TB_EMPLOYEE;",위 쿼리의 실행 결과는?,① 3000000,② 3500000,③ 4000000,④ 4500000,④,4500000,최지영의 급여 4500000이 가장 높습니다.
4,집계함수,TB_PRODUCT,"SELECT SUM(STOCK)
FROM TB_PRODUCT
WHERE CATEGORY = '전자';",위 쿼리의 실행 결과는?,① 95,② 105,③ 115,④ 125,②,105,전자 제품의 재고 합계: 10 + 50 + 30 + 15 = 105
5,ORDER BY,TB_EMPLOYEE,"SELECT NAME
FROM TB_EMPLOYEE
ORDER BY SALARY DESC
LIMIT 1;",위 쿼리의 실행 결과는?,① 김철수,② 이영희,③ 박민수,④ 최지영,④,최지영,급여가 가장 높은 사람은 최지영(4500000)입니다.
6,WHERE 조건,TB_PRODUCT,"SELECT PROD_NAME
FROM TB_PRODUCT
WHERE PRICE >= 100000;",위 쿼리의 실행 결과로 조회되는 제품 개수는?,① 1개,② 2개,③ 3개,④ 4개,②,"노트북, 모니터","가격이 100000원 이상인 제품은 노트북(150000), 모니터(200000) 2개입니다."
7,집계함수,TB_EMPLOYEE,"SELECT AVG(SALARY)
FROM TB_EMPLOYEE
WHERE DEPT = '영업';",위 쿼리의 실행 결과는?,① 3000000,② 3250000,③ 3500000,④ 3750000,②,3250000,영업부 직원의 평균 급여: (3000000 + 3500000) / 2 = 3250000
8,DISTINCT,TB_EMPLOYEE,"SELECT DISTINCT DEPT
FROM TB_EMPLOYEE;",위 쿼리의 실행 결과로 조회되는 행의 개수는?,① 2개,② 3개,③ 4개,④ 5개,②,"영업, 개발, 인사","부서는 영업, 개발, 인사 3가지입니다."
9,LIKE 연산자,TB_EMPLOYEE,"SELECT COUNT(*)
FROM TB_EMPLOYEE
WHERE NAME LIKE '%수';",위 쿼리의 실행 결과는?,① 1,② 2,③ 3,④ 4,②,2,"이름이 '수'로 끝나는 직원은 김철수, 박민수 2명입니다."
10,BETWEEN,TB_PRODUCT,"SELECT COUNT(*)
FROM TB_PRODUCT
WHERE PRICE BETWEEN 20000 AND 100000;",위 쿼리의 실행 결과는?,① 2,② 3,③ 4,④ 5,②,3,"가격이 20000~100000 사이인 제품: 마우스(20000), 키보드(35000), 의자(80000) 3개입니다."
11,GROUP BY,TB_EMPLOYEE,"SELECT DEPT, COUNT(*)
FROM TB_EMPLOYEE
GROUP BY DEPT;",위 쿼리의 실행 결과로 조회되는 행의 개수는?,① 1개,② 2개,③ 3개,④ 5개,③,"영업, 2
개발, 2
인사, 1","부서별로 그룹화하면 영업, 개발, 인사 3개 그룹이 생성됩니다."
12,GROUP BY,TB_EMPLOYEE,"SELECT DEPT, SUM(SALARY)
FROM TB_EMPLOYEE
GROUP BY DEPT
ORDER BY SUM(SALARY) DESC
LIMIT 1;",위 쿼리의 실행 결과에서 DEPT 컬럼의 값은?,① 영업,② 개발,③ 인사,④ 관리,②,"개발, 8500000",부서별 급여 합계가 가장 큰 부서는 개발(4000000 + 4500000 = 8500000)입니다.
13,HAVING,TB_EMPLOYEE,"SELECT DEPT, COUNT(*)
FROM TB_EMPLOYEE
GROUP BY DEPT
HAVING COUNT(*) >= 2;",위 쿼리의 실행 결과로 조회되는 부서의 개수는?,① 1개,② 2개,③ 3개,④ 4개,②,"영업, 2
개발, 2","직원이 2명 이상인 부서는 영업(2명), 개발(2명) 2개입니다."
14,GROUP BY,TB_PRODUCT,"SELECT CATEGORY, AVG(PRICE)
FROM TB_PRODUCT
GROUP BY CATEGORY;",위 쿼리에서 CATEGORY가 '전자'인 행의 AVG(PRICE) 값은?,① 80000,② 95000,③ 101250,④ 110000,③,"전자, 101250
가구, 80000",전자 제품의 평균 가격: (150000 + 20000 + 35000 + 200000) / 4 = 101250
15,GROUP BY,TB_ORDERS,"SELECT EMP_ID, COUNT(*) AS ORDER_CNT
FROM TB_ORDERS
GROUP BY EMP_ID
ORDER BY ORDER_CNT DESC
LIMIT 1;",위 쿼리의 실행 결과에서 EMP_ID 값은?,① 1,② 2,③ 3,④ 4,②,"2, 2",주문이 가장 많은 직원은 EMP_ID=2(이영희)로 2건입니다.
16,HAVING,TB_ORDERS,"SELECT PROD_ID, SUM(QUANTITY)
FROM TB_ORDERS
GROUP BY PROD_ID
HAVING SUM(QUANTITY) >= 3;",위 쿼리의 실행 결과로 조회되는 행의 개수는?,① 1개,② 2개,③ 3개,④ 4개,③,"101, 3
102, 5
103, 3","주문 수량 합계가 3개 이상인 제품: 101(3개), 102(5개), 103(3개) 3개입니다."
17,GROUP BY,TB_EMPLOYEE,"SELECT DEPT, MAX(SALARY), MIN(SALARY)
FROM TB_EMPLOYEE
GROUP BY DEPT
HAVING MAX(SALARY) - MIN(SALARY) >= 1000000;",위 쿼리의 실행 결과로 조회되는 부서는?,① 영업만,② 개발만,"③ 영업, 개발",④ 조회되는 부서 없음,③,"영업, 3500000, 3000000
개발, 4500000, 4000000","영업(차이 500000), 개발(차이 500000) - 오류 수정 필요"
18,IN 연산자,TB_EMPLOYEE,"SELECT COUNT(*)
FROM TB_EMPLOYEE
WHERE DEPT IN ('영업', '개발');",위 쿼리의 실행 결과는?,① 2,② 3,③ 4,④ 5,③,4,"영업 또는 개발 부서 직원: 김철수, 이영희, 박민수, 최지영 4명입니다."
19,ORDER BY,TB_PRODUCT,"SELECT PROD_NAME
FROM TB_PRODUCT
ORDER BY PRICE ASC
LIMIT 1;",위 쿼리의 실행 결과는?,① 노트북,② 마우스,③ 키보드,④ 의자,②,마우스,가격이 가장 낮은 제품은 마우스(20000원)입니다.
20,CASE WHEN,TB_EMPLOYEE,"SELECT NAME,
  CASE
    WHEN SALARY >= 4000000 THEN '고액'
    WHEN SALARY >= 3500000 THEN '중액'
    ELSE '저액'
  END AS SALARY_LEVEL
FROM TB_EMPLOYEE
WHERE DEPT = '영업';",위 쿼리에서 김철수의 SALARY_LEVEL 값은?,① 고액,② 중액,③ 저액,④ NULL,③,"김철수, 저액
박민수, 중액",김철수의 급여(3000000)는 3500000 미만이므로 '저액'입니다.
21,서브쿼리,TB_EMPLOYEE,"SELECT NAME
FROM TB_EMPLOYEE
WHERE SALARY > (SELECT AVG(SALARY) FROM TB_EMPLOYEE);",위 쿼리의 실행 결과로 조회되는 직원 수는?,① 1명,② 2명,③ 3명,④ 4명,②,"이영희, 최지영","평균 급여(3640000)보다 높은 직원은 이영희(4000000), 최지영(4500000) 2명입니다."
22,NULL,TB_PRODUCT,"SELECT PROD_NAME
FROM TB_PRODUCT
WHERE STOCK IS NOT NULL
ORDER BY STOCK DESC
LIMIT 1;",위 쿼리의 실행 결과는?,① 노트북,② 마우스,③ 키보드,④ 의자,②,마우스,재고가 가장 많은 제품은 마우스(50개)입니다.
23,날짜 함수,TB_EMPLOYEE,"SELECT NAME
FROM TB_EMPLOYEE
WHERE HIRE_DATE < '2020-01-01';",위 쿼리의 실행 결과로 조회되는 직원 수는?,① 1명,② 2명,③ 3명,④ 4명,②,"이영희, 최지영","2020년 이전 입사자: 이영희(2019-03-20), 최지영(2018-11-05) 2명입니다."
24,복합 조건,TB_EMPLOYEE,"SELECT COUNT(*)
FROM TB_EMPLOYEE
WHERE (DEPT = '영업' AND SALARY >= 3500000)
   OR (DEPT = '개발' AND SALARY <= 4000000);",위 쿼리의 실행 결과는?,① 1,② 2,③ 3,④ 4,②,2,"조건을 만족하는 직원: 박민수(영업, 3500000), 이영희(개발, 4000000) 2명입니다."
25,집합연산,TB_EMPLOYEE,"SELECT DEPT FROM TB_EMPLOYEE WHERE SALARY >= 4000000
UNION
SELECT DEPT FROM TB_EMPLOYEE WHERE DEPT = '인사';",위 쿼리의 실행 결과로 조회되는 행의 개수는?,① 1개,② 2개,③ 3개,④ 4개,②,"개발
인사","UNION은 중복을 제거하므로 개발(2번 나오지만 1번만), 인사 2개가 조회됩니다."
26,JOIN,"TB_EMPLOYEE, TB_ORDERS","SELECT E.NAME, COUNT(O.ORDER_ID)
FROM TB_EMPLOYEE E
LEFT JOIN TB_ORDERS O ON E.EMP_ID = O.EMP_ID
GROUP BY E.NAME;",위 쿼리에서 정수진의 COUNT(O.ORDER_ID) 값은?,① 0,② 1,③ 2,④ NULL,①,"김철수, 2
이영희, 2
박민수, 1
최지영, 0
정수진, 0",정수진은 주문 내역이 없으므로 COUNT는 0입니다.
27,JOIN,"TB_ORDERS, TB_PRODUCT","SELECT P.PROD_NAME, SUM(O.QUANTITY)
FROM TB_ORDERS O
INNER JOIN TB_PRODUCT P ON O.PROD_ID = P.PROD_ID
GROUP BY P.PROD_NAME
ORDER BY SUM(O.QUANTITY) DESC
LIMIT 1;",위 쿼리의 실행 결과에서 PROD_NAME 값은?,① 노트북,② 마우스,③ 키보드,④ 모니터,②,"마우스, 5",주문 수량이 가장 많은 제품은 마우스(5개)입니다.
28,JOIN,"TB_EMPLOYEE, TB_ORDERS","SELECT E.DEPT, COUNT(O.ORDER_ID)
FROM TB_EMPLOYEE E
INNER JOIN TB_ORDERS O ON E.EMP_ID = O.EMP_ID
GROUP BY E.DEPT;",위 쿼리의 실행 결과로 조회되는 부서의 개수는?,① 1개,② 2개,③ 3개,④ 4개,②,"영업, 3
개발, 2","INNER JOIN으로 주문이 있는 부서만 조회되므로 영업, 개발 2개입니다."
29,윈도우 함수,TB_EMPLOYEE,"SELECT NAME,
  ROW_NUMBER() OVER (ORDER BY SALARY DESC) AS RNK
FROM TB_EMPLOYEE;",위 쿼리에서 이영희의 RNK 값은?,① 1,② 2,③ 3,④ 4,②,"최지영, 1
이영희, 2
박민수, 3
정수진, 4
김철수, 5",급여 순으로 정렬하면 이영희(4000000)는 2위입니다.
30,윈도우 함수,TB_EMPLOYEE,"SELECT NAME, DEPT,
  RANK() OVER (PARTITION BY DEPT ORDER BY SALARY DESC) AS DEPT_RANK
FROM TB_EMPLOYEE
WHERE DEPT = '영업';",위 쿼리에서 김철수의 DEPT_RANK 값은?,① 1,② 2,③ 3,④ NULL,②,"박민수, 영업, 1
김철수, 영업, 2",영업부 내에서 급여 순위를 매기면 김철수(3000000)는 2위입니다.
31,문자열 함수,TB_EMPLOYEE,"SELECT COUNT(*)
FROM TB_EMPLOYEE
WHERE LENGTH(NAME) = 3;",위 쿼리의 실행 결과는?,① 2,② 3,③ 4,④ 5,④,5,모든 직원의 이름이 3글자이므로 5명 전부 조회됩니다.
32,서브쿼리,TB_PRODUCT,"SELECT PROD_NAME
FROM TB_PRODUCT
WHERE PRICE = (SELECT MIN(PRICE) FROM TB_PRODUCT);",위 쿼리의 실행 결과는?,① 노트북,② 마우스,③ 키보드,④ 의자,②,마우스,가격이 가장 낮은(20000) 제품은 마우스입니다.
33,서브쿼리,TB_EMPLOYEE,"SELECT DEPT, AVG(SALARY)
FROM TB_EMPLOYEE
GROUP BY DEPT
HAVING AVG(SALARY) > (SELECT AVG(SALARY) FROM TB_EMPLOYEE);",위 쿼리의 실행 결과로 조회되는 부서는?,① 영업만,② 개발만,"③ 영업, 개발",④ 조회되는 부서 없음,②,"개발, 4250000",전체 평균(3640000)보다 부서 평균이 높은 부서는 개발(4250000)만 해당됩니다.
34,산술 연산,TB_PRODUCT,"SELECT SUM(PRICE * STOCK)
FROM TB_PRODUCT
WHERE CATEGORY = '전자';",위 쿼리의 실행 결과는?,① 4550000,② 5050000,③ 5550000,④ 6050000,③,5550000,전자 제품의 총 재고 가치: (150000×10)+(20000×50)+(35000×30)+(200000×15) = 5550000
35,COALESCE,TB_ORDERS,"SELECT ORDER_ID,
  COALESCE(QUANTITY, 0) AS QTY
FROM TB_ORDERS
WHERE ORDER_ID = 1001;",위 쿼리에서 QTY 값은?,① 0,② 1,③ 2,④ NULL,③,"1001, 2",ORDER_ID 1001의 QUANTITY는 2이므로 그대로 2가 반환됩니다.
36,EXISTS,"TB_EMPLOYEE, TB_ORDERS","SELECT COUNT(*)
FROM TB_EMPLOYEE E
WHERE EXISTS (
  SELECT 1 FROM TB_ORDERS O
  WHERE O.EMP_ID = E.EMP_ID
);",위 쿼리의 실행 결과는?,① 2,② 3,③ 4,④ 5,②,3,"주문 내역이 있는 직원은 김철수, 이영희, 박민수 3명입니다."
37,NOT EXISTS,"TB_EMPLOYEE, TB_ORDERS","SELECT NAME
FROM TB_EMPLOYEE E
WHERE NOT EXISTS (
  SELECT 1 FROM TB_ORDERS O
  WHERE O.EMP_ID = E.EMP_ID
);",위 쿼리의 실행 결과로 조회되는 직원 수는?,① 1명,② 2명,③ 3명,④ 4명,②,"최지영, 정수진","주문 내역이 없는 직원은 최지영, 정수진 2명입니다."
38,DENSE_RANK,TB_PRODUCT,"SELECT PROD_NAME,
  DENSE_RANK() OVER (ORDER BY PRICE DESC) AS PRICE_RANK
FROM TB_PRODUCT;",위 쿼리에서 키보드의 PRICE_RANK 값은?,① 3,② 4,③ 5,④ 6,②,"모니터, 1
노트북, 2
의자, 3
키보드, 4
마우스, 5",가격 순으로 정렬하면 키보드(35000)는 4위입니다.
39,UNION ALL,TB_EMPLOYEE,"SELECT DEPT FROM TB_EMPLOYEE WHERE SALARY >= 4000000
UNION ALL
SELECT DEPT FROM TB_EMPLOYEE WHERE DEPT = '개발';",위 쿼리의 실행 결과로 조회되는 행의 개수는?,① 2개,② 3개,③ 4개,④ 5개,③,"개발
개발
개발
개발",UNION ALL은 중복을 제거하지 않으므로 개발이 4번(급여>=400만 2개 + 개발부 2개) 조회됩니다.
40,LIMIT OFFSET,TB_EMPLOYEE,"SELECT NAME
FROM TB_EMPLOYEE
ORDER BY SALARY DESC
LIMIT 2 OFFSET 1;",위 쿼리의 실행 결과로 조회되는 첫 번째 이름은?,① 최지영,② 이영희,③ 박민수,④ 정수진,②,"이영희, 박민수","급여 순으로 2번째부터 2개를 조회하므로 이영희(2위), 박민수(3위)가 조회됩니다."
41,복합 쿼리,"TB_EMPLOYEE, TB_ORDERS, TB_PRODUCT","SELECT E.NAME, SUM(O.QUANTITY * P.PRICE) AS TOTAL_AMT
FROM TB_EMPLOYEE E
INNER JOIN TB_ORDERS O ON E.EMP_ID = O.EMP_ID
INNER JOIN TB_PRODUCT P ON O.PROD_ID = P.PROD_ID
GROUP BY E.NAME
ORDER BY TOTAL_AMT DESC
LIMIT 1;",위 쿼리의 실행 결과에서 NAME 값은?,① 김철수,② 이영희,③ 박민수,④ 최지영,②,"이영희, 500000",이영희의 주문 총액: (5×20000)+(2×200000) = 500000으로 가장 높습니다.
42,날짜 함수,TB_EMPLOYEE,"SELECT COUNT(*)
FROM TB_EMPLOYEE
WHERE YEAR(HIRE_DATE) = 2020;",위 쿼리의 실행 결과는?,① 1,② 2,③ 3,④ 4,②,2,"2020년에 입사한 직원은 김철수(2020-01-15), 정수진(2020-08-22) 2명입니다."
43,HAVING vs WHERE,TB_EMPLOYEE,"SELECT DEPT, COUNT(*)
FROM TB_EMPLOYEE
WHERE SALARY >= 3500000
GROUP BY DEPT
HAVING COUNT(*) >= 2;",위 쿼리의 실행 결과로 조회되는 부서는?,① 영업만,② 개발만,"③ 영업, 개발",④ 조회되는 부서 없음,②,"개발, 2","급여 3500000 이상인 직원 중 부서별 인원이 2명 이상인 부서는 개발(이영희, 최지영)만입니다."
44,LEFT JOIN,"TB_PRODUCT, TB_ORDERS","SELECT P.PROD_NAME, COUNT(O.ORDER_ID)
FROM TB_PRODUCT P
LEFT JOIN TB_ORDERS O ON P.PROD_ID = O.PROD_ID
GROUP BY P.PROD_NAME
HAVING COUNT(O.ORDER_ID) = 0;",위 쿼리의 실행 결과로 조회되는 제품은?,① 노트북,② 마우스,③ 의자,④ 조회되는 제품 없음,③,의자,주문 내역이 없는 제품은 의자(PROD_ID=105)입니다.
45,Self JOIN,TB_EMPLOYEE,"SELECT E1.NAME, E2.NAME
FROM TB_EMPLOYEE E1
INNER JOIN TB_EMPLOYEE E2 ON E1.DEPT = E2.DEPT AND E1.EMP_ID < E2.EMP_ID
WHERE E1.DEPT = '영업';",위 쿼리의 실행 결과로 조회되는 행의 개수는?,① 0개,② 1개,③ 2개,④ 3개,②,"김철수, 박민수","영업부에서 같은 부서 직원 조합은 (김철수, 박민수) 1개입니다."
46,문자열 함수,TB_EMPLOYEE,"SELECT COUNT(*)
FROM TB_EMPLOYEE
WHERE SUBSTRING(NAME, 1, 1) = '김';",위 쿼리의 실행 결과는?,① 0,② 1,③ 2,④ 3,②,1,이름이 '김'으로 시작하는 직원은 김철수 1명입니다.
47,ROUND 함수,TB_EMPLOYEE,"SELECT ROUND(AVG(SALARY), -5)
FROM TB_EMPLOYEE;",위 쿼리의 실행 결과는?,① 3600000,② 3640000,③ 3650000,④ 3700000,①,3600000,평균 급여 3640000을 십만 단위에서 반올림하면 3600000입니다.
48,IN 서브쿼리,"TB_EMPLOYEE, TB_ORDERS","SELECT COUNT(*)
FROM TB_EMPLOYEE
WHERE EMP_ID NOT IN (
  SELECT DISTINCT EMP_ID FROM TB_ORDERS
);",위 쿼리의 실행 결과는?,① 1,② 2,③ 3,④ 4,②,2,"주문하지 않은 직원은 최지영(EMP_ID=4), 정수진(EMP_ID=5) 2명입니다."
49,INTERSECT,TB_EMPLOYEE,"SELECT DEPT FROM TB_EMPLOYEE WHERE SALARY >= 3500000
INTERSECT
SELECT DEPT FROM TB_EMPLOYEE WHERE SALARY <= 4000000;",위 쿼리의 실행 결과로 조회되는 부서의 개수는?,① 1개,② 2개,③ 3개,④ 4개,②,"영업, 개발","급여가 3500000~4000000 사이인 직원이 속한 부서: 영업(박민수), 개발(이영희) 2개입니다."
50,종합,"TB_EMPLOYEE, TB_ORDERS","SELECT E.DEPT, AVG(O.QUANTITY) AS AVG_QTY
FROM TB_EMPLOYEE E
INNER JOIN TB_ORDERS O ON E.EMP_ID = O.EMP_ID
GROUP BY E.DEPT
HAVING AVG(O.QUANTITY) >= 2
ORDER BY AVG_QTY DESC;",위 쿼리의 실행 결과에서 첫 번째 행의 DEPT 값은?,① 영업,② 개발,③ 인사,④ 조회되는 부서 없음,②,"개발, 3.5
영업, 2.0",개발부의 평균 주문 수량((5+2)/2=3.5)이 영업부((2+3+1)/3=2.0)보다 높습니다.
